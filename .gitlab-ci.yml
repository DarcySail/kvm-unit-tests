image: fedora:30

before_script:
 - dnf update -y
 - dnf install -y make python

build-aarch64:
 script:
 - dnf install -y qemu-system-aarch64 gcc-aarch64-linux-gnu
 - ./configure --arch=aarch64 --cross-prefix=aarch64-linux-gnu-
 - make -j2
 - ACCEL=tcg ./run_tests.sh
     selftest-setup selftest-vectors-kernel selftest-vectors-user selftest-smp
     pci-test pmu gicv2-active gicv3-active psci timer
     | tee results.txt
 - if grep -q FAIL results.txt ; then exit 1 ; fi

build-arm:
 script:
 - dnf install -y qemu-system-arm gcc-arm-linux-gnu
 - ./configure --arch=arm --cross-prefix=arm-linux-gnu-
 - make -j2
 - ACCEL=tcg ./run_tests.sh
     selftest-setup selftest-vectors-kernel selftest-vectors-user selftest-smp
     pci-test pmu gicv2-active gicv3-active psci
     | tee results.txt
 - if grep -q FAIL results.txt ; then exit 1 ; fi

build-ppc64be:
 script:
 - dnf install -y qemu-system-ppc gcc-powerpc64-linux-gnu
 - ./configure --arch=ppc64 --endian=big --cross-prefix=powerpc64-linux-gnu-
 - make -j2
 - ACCEL=tcg ./run_tests.sh
     selftest-setup spapr_hcall rtas-get-time-of-day rtas-get-time-of-day-base
     rtas-set-time-of-day emulator
     | tee results.txt
 - if grep -q FAIL results.txt ; then exit 1 ; fi

build-ppc64le:
 script:
 - dnf install -y qemu-system-ppc gcc-powerpc64-linux-gnu
 - ./configure --arch=ppc64 --endian=little --cross-prefix=powerpc64-linux-gnu-
 - make -j2
 - ACCEL=tcg ./run_tests.sh
     selftest-setup spapr_hcall rtas-get-time-of-day rtas-get-time-of-day-base
     rtas-set-time-of-day emulator
     | tee results.txt
 - if grep -q FAIL results.txt ; then exit 1 ; fi

build-s390x:
 script:
 - dnf install -y qemu-system-s390x gcc-s390x-linux-gnu
 - ./configure --arch=s390x --cross-prefix=s390x-linux-gnu-
 - make -j2
 - ACCEL=tcg ./run_tests.sh
     selftest-setup intercept emulator sieve diag10
     | tee results.txt
 - if grep -q FAIL results.txt ; then exit 1 ; fi

build-x86_64:
 script:
 - dnf install -y qemu-system-x86 gcc
 - ./configure --arch=x86_64
 - make -j2
 - ACCEL=tcg ./run_tests.sh
     ioapic-split ioapic smptest smptest3 vmexit_cpuid vmexit_mov_from_cr8
     vmexit_mov_to_cr8 vmexit_inl_pmtimer  vmexit_ipi vmexit_ipi_halt
     vmexit_ple_round_robin vmexit_tscdeadline vmexit_tscdeadline_immed
     eventinj msr port80 syscall tsc rmap_chain umip intel_iommu
     | tee results.txt
 - if grep -q FAIL results.txt ; then exit 1 ; fi

build-i386:
 script:
 - dnf install -y qemu-system-x86 gcc
 - ./configure --arch=i386
 - make -j2
 - ACCEL=tcg ./run_tests.sh
     eventinj port80 sieve tsc taskswitch taskswitch2 umip
     | tee results.txt
 - if grep -q FAIL results.txt ; then exit 1 ; fi
